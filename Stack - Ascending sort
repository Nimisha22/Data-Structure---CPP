Problem Statement 
You have to implement myStack sortStack(myStack stack, int size) function which will take a stack and sort all its elements in ascending order.

Input 
A stack of integers.

Output 
Returns the stack with all its elements sorted.

Sample Input 
//input stack where 23 is the top
23, 60, 12, 42, 4, 97, 2

Sample Output 
//resultant stack where 2 is the top
 2, 4, 12, 23, 42, 60, 9
 
 -----------------------------------------------------------------------------
 Code
 
#include <iostream> 
using namespace std; 

 
struct stack { 
	int data; 
	struct stack* next; 
}; 


void initStack(struct stack** s) { 
    *s = NULL; 
} 


int isEmpty(struct stack* s) { 
	if (s == NULL) 
		return 1; 
	return 0; 
} 


void push(struct stack** s, int x) { 
	struct stack* p = (struct stack*)malloc(sizeof(*p)); 

	if (p == NULL) { 
		fprintf(stderr, "Memory allocation failed.\n"); 
		return; 
	} 

	p->data = x; 
	p->next = *s; 
	*s = p; 
} 


int pop(struct stack** s) { 
	int x; 
	struct stack* temp; 

	x = (*s)->data; 
	temp = *s; 
	(*s) = (*s)->next; 
	free(temp); 

	return x; 
} 


int top(struct stack* s) { 
    return (s->data); 
} 


void sortedInsert(struct stack** s, int x) { 
	// Base case: Either stack is empty or newly inserted 
	// item is greater than top (more than all existing) 
  
	if (isEmpty(*s) or x < top(*s)) { 
		push(s, x); 
		return; 
	} 

	// If top is greater, remove the top item and recur 
	int temp = pop(s); 
	sortedInsert(s, x); 

	// Put back the top item removed earlier 
	push(s, temp); 
} 



void sortStack(struct stack** s) { 
	if (!isEmpty(*s)) { 
		int x = pop(s); 

		// Sort remaining stack 
		sortStack(s); 

		// Push the top item back in sorted stack 
		sortedInsert(s, x); 
	} 
} 


void printStack(struct stack* s) { 
	while (s) { 
		cout << s->data << " "; 
		s = s->next; 
	} 
	cout << "\n"; 
} 


int main(void) { 
	struct stack* top; 

	initStack(&top); 
	push(&top, 7); 
	push(&top, 2); 
	push(&top, 97); 
	push(&top, 4); 
	push(&top, 42);
	push(&top, 12); 
	push(&top, 60); 
	push(&top, 23); 

	sortStack(&top); 
	cout << "\n"; 

	printStack(top); 

	return 0; 
} 
