Problem Statement
Implement the isSubset(int* arr1, int* arr2, int size1, int size2) function, which will take two arrays and their sizes 
as input and check whether one array is the subset of the other.

Note: The input arrays do not contain duplicate values.

Input 
Two arrays of integers and their sizes.

Output 
true if arr2 is a subset of arr1.

Sample Input 
7
9
4
7
1
-2
6
5
3
7
1
-2


Sample Output 
1

---------------------------------------------------------------
Code

#include <unordered_set>
#include <iostream>
using namespace std;

bool isSubset(int* arr1, int* arr2, int size1, int size2) {
    unordered_set<int> arr1Set;
    for(int i = 0; i < size1; i++) {
        arr1Set.insert(arr1[i]);
    }
    for(int i = 0; i < size2; i++) {
        if(arr1Set.find(arr2[i]) == arr1Set.end()) {
            return false;
        }
    }
    
    return true;
}


int main() {
    // Accept input from the user and display the result
    int size1;
    cin >> size1;
    int arr1[size1];
    for(int i = 0; i < size1; i++) {
        cin >> arr1[size1];
    }
    int size2;
    cin >> size2;
    int arr2[size2];
    for(int i = 0; i < size2; i++) {
        cin >> arr2[size2];
    }
    cout << (isSubset(arr1, arr2, size1, size2) ? "0" : "1");
}
