In a given integer array nums, there is always exactly one largest element.

Find whether the largest element in the array is at least twice as much as every other number in the array.

If it is, return the index of the largest element, otherwise return -1.

Example 1:

Input: nums = [3, 6, 1, 0]
Output: 1
Explanation: 6 is the largest integer, and for every other number in the array x,
6 is more than twice as big as x.  The index of value 6 is 1, so we return 1.
 

Example 2:

Input: nums = [1, 2, 3, 4]
Output: -1
Explanation: 4 isn't at least as big as twice the value of 3, so we return -1.
 

Note:

nums will have a length in the range [1, 50].
Every nums[i] will be an integer in the range [0, 99].

-------------------------------------------------------------------------------
class Solution {
public:
    int dominantIndex(vector<int>& nums) {
        if(nums.size() < 2){
            return nums.size() - 1;
        }
        int max1 = INT_MIN;
        int max2 = INT_MIN;
        int result = -1;
        for(int i = 0; i < nums.size(); i++){
            if(nums[i] > max1){
                result = i;
                max2 = max1;
                max1 = nums[i];
            } else if(nums[i] > max2){
                max2 = nums[i];
            }
        }
        return max1 >= 2 * max2 ? result : -1;
    }
};

----------------------------------------------------------
// Moore's Voting Algo - O(n)

class Solution {
public:
    int majorityElement(vector<int>& nums) {
		// Initialize count variable to count the occurrence and ele variable to keep track of element which is being counted
        int count = 0;
        int ele = 0;
        
		
        for(int i = 0; i < nums.size(); i++){
			// if count is 0 then assign the current element to ele variable
            if(count == 0){
                ele = nums[i];
            }
            // if nums[i] equals to ele then increase the count or else decrease
            if(ele == nums[i]){
                count+= 1;
            }else{
                count-= 1;
            }
        }
        
        return ele;
    }
};
