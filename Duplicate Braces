Given a string A denoting an expression. It contains the following operators ’+’, ‘-‘, ‘*’, ‘/’.
Check whether A has redundant braces or not.

Return 1 if A has redundant braces, else return 0.

Note: A will be always a valid expression.

Sample Input 1:
"((a + b))"

Sample Output 1:
1

Sample Input 2: 
"(a + (a + b))"

Sample Output 2:
0

------------------------------------------------------------------
Code 

#include <stack>
#include <algorithm>
#include <string>
#include <iostream>

using namespace std;

bool check(string& str) {
    stack <char> st;
    for(auto& ch : str) {
        if (ch == ')') {
            char top = st.top();
            st.pop();
            bool flag = true;
            
            while (top != '(') {
                if (top == '+' || top == '-' || top == '*' || top == '/')
                  flag = false;
                  
                top = st.top();
                st.pop();
            }
            if (flag == true)
               return true;
        }
        else
          st.push(ch);
        
    }
    return false;
}

int main() {
    string str;
    cin >> str;
    bool ans = check(str);
    if (ans == true)
      cout << 1;
    else
      cout << 0;
      
    return 0;  
}
