Factorial of a number N, written as N! is the product of all numbers from 1 to N. That is N! = 1 x 2 x ... N

For example, 5! is 120, 10! is 3628800 and 17! is 355687428096000. As can be seen these numbers grow very fast. For even modest values of n, n! may not be representable exactly in programming languages with fixed integer sizes.

Write a function that determines the number of trailing zeros in the factorial of the input number.

----------------------------------------------------------------
Code 

#include <iostream>

using namespace std;

int main() {
	int n, ans = 0;
	cin >> n;
	while(n){
		ans += n/5;
		n /= 5;
	}
	cout << ans <<"\n";
}

Basically you will only need 5 because what adds 0 at the end of a number is 10 and its powers. 10 is 2*5. 2 is plenty enough so only 5 does matter.
For example,12! is 12/5 = 2.
What happens when the n is more than 24 is that the factorial starts to have more fives i.e. 1000!, which means we can divide it by 5 further until n becomes 0. 
1000/5 = 200. 200/5 = 40. 40/5 = 8. 8/5 = 1. Answer is sum of these quotients.
