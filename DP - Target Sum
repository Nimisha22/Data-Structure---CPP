1. You are given a number n, representing the count of elements.
2. You are given n numbers.
3. You are given a number "tar".
4. You are required to calculate and print true or false, if there is a subset the elements of which add 
     up to "tar" or not.

Input Format
A number n
n1
n2
.. n number of elements
A number tar

Output Format
true or false as required

https://www.pepcoding.com/resources/online-java-foundation/dynamic-programming-and-greedy/target-sum-subsets-dp-official/ojquestion

-------------------------------------------------

#include<bits/stdc++.h> 
using namespace std;

int main() {
    int n, tar;
    cin >> n;
    int arr[n];
    for(int i = 0; i < n; i++) {
        cin >> arr[i];
    }
    cout << "Tar = ";
    cin >> tar;
    
    bool dp[n + 1][tar + 1];
    
    for(int i = 0; i < n + 1; i++) {
        for(int j = 0; j < tar + 1; j++) {
            if(i == 0 && j == 0) {
                dp[i][j] = true;
            } else if (i == 0) {
                dp[i][j] == false;
            } else if(j == 0) {
                dp[i][j] == true;
            }
            else{
                if (dp[i - 1][j] == true) {
                    dp[i][j] =true;
                }
                else {
                    int val = arr[i - 1];
                    if(val >= j) {
                        if(dp[i - 1][j - val] == true) {
                            dp[i][j] = true;
                        }
                    }
                }
            }
            
        }
    }
    cout << "ans = " << dp[n][tar];
    return 0;
}
