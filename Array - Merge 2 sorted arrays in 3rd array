Problem Statement 
Implement a function mergeArrays(int arr1[], int arr2[], int arr1Size,int arr2Size)  which merges two sorted arrays into another sorted array. The definition of the function is given.

Input: 
Two sorted arrays and their sizes.

Output: 
A merged sorted array consisting of all elements of both input arrays.

Sample Input 
[1,3,4,5]  
[2,6,7,8]

Sample Output 
[1,2,3,4,5,6,7,8]

-----------------------------------------------------------------------
Code

#include<bits/stdc++.h> 
using namespace std; 

int * mergeArrays(int arr1[], int arr2[], int arr1Size, int arr2Size) {
    int * arr3; // creating new array
   
    // Sorting arr1[] and arr2[] 
    sort(arr1, arr1 + arr1Size); 
    sort(arr2, arr2 + arr2Size); 
  
    // Merge two sorted arrays into arr3[] 
    int i = 0, j = 0, k = 0; 
    while (i < arr1Size && j < arr2Size) { 
        if (arr1[i] <= arr2[j]) { 
            arr3[k] = arr1[i]; 
            i += 1; 
            k += 1; 
        } else { 
            arr3[k] = arr2[j]; 
            j += 1; 
            k += 1; 
        } 
    }     
    while (i < arr1Size) {  // Merging remaining elements of arr1[] (if any) 
        arr3[k] = arr1[i]; 
        i += 1; 
        k += 1; 
    }     
    while (j < arr2Size) {   // Merging remaining elements of arr2[] (if any) 
        arr3[k] = arr2[j]; 
        j += 1; 
        k += 1; 
    } 
    return arr3; // returning array
}

int main() {
    int size1 = 5, size2 = 3;
    int arr[size1] = {1, 12, 14, 17, 23}; // creating array 1
    int arr1[size2] = {11, 19, 27};  // creating array 2
    int * arr2 = mergeArrays(arr, arr1, size1, size2); // calling mergeArrays
    for(int i = 0; i < size1 + size2 ; i++) {
        cout << arr2[i] << " ";
    }
    delete arr2;  // deleting pointer
    return 0;
}
