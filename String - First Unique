Given a string s, find the first non-repeating character in it and return its index. 
If it does not exist, return -1.

Example 1:
Input: s = "leetcode"
Output: 0

Example 2:
Input: s = "loveleetcode"
Output: 2

Example 3:
Input: s = "aabb"
Output: -1
 

Constraints:

1 <= s.length <= 105
s consists of only lowercase English letters.
---------------------------------------------------------------

class Solution {
public:
    int firstUniqChar(string s) {
    
    int hash[26] = {0};

    for (int i = 0; i < s.length(); i++)
        hash[s[i] - 'a']++;

    for (int i = 0; i < s.length(); i++)
        if (hash[s[i] - 'a'] == 1)
            return i;
        return -1;
   }     
};

Runtime: 26 ms, faster than 69.79% of C++ online submissions for First Unique Character in a String.
Memory Usage: 10.6 MB, less than 89.55% of C++ online submissions for First Unique Character in a String.
