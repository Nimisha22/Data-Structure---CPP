Problem Statement 
Implement a function, findProduct(int arr[], int size) which takes an array arr and its size as an input and returns an array so that each index has a product of all the numbers present in the array except the number stored at that index.
size should be equal to or greater than 2.

Input: 
An array of integers and its size

Output: 
An array such that each index has a product of all the numbers in the array except the number stored at that index

Sample Input 
[1,2,3,4]

Sample Output 
[24,12,8,6]

----------------------------------------------------------
Code

#include <bits/stdc++.h> 
using namespace std; 

int * findProduct(int arr[], int size)  { 
    int * prod = new int[size]; 
    int i, temp = 1; 
  
    memset(prod, 1, size); 
  
    /* In this loop, temp variable contains product of  
       elements on left side excluding arr[i] */
    for (i = 0; i < size; i++) { 
        prod[i] = temp; 
        temp *= arr[i]; 
    } 
  
    temp = 1; 
  

    for (i = size - 1; i >= 0; i--) { 
        prod[i] *= temp; 
        temp *= arr[i]; 
    } 

    return prod; 
} 



int main() {
  int size = 4;
  int arr[size] = {1, 3, 4, 5};
  
  cout << "Array before product: ";
  for(int i = 0; i < size; i++) {
    cout << arr[i] << " ";
  }
  cout << endl;
  
  int * prodArray = findProduct(arr, size);
  
  cout << "Array after product: ";
  for(int i = 0; i < size; i++) {
    cout << prodArray[i] << " ";
  }
  cout << endl;
  delete[] prodArray;
  return 0;
}
