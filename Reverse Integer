Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go 
outside the signed 32-bit integer range [-231, 231 - 1], then return 0.

Assume the environment does not allow you to store 64-bit integers (signed or unsigned).

 

Example 1:

Input: x = 123
Output: 321
Example 2:

Input: x = -123
Output: -321
Example 3:

Input: x = 120
Output: 21
Example 4:

Input: x = 0
Output: 0
 

Constraints:

-231 <= x <= 231 - 1


-----------------------------------------------------
class Solution {
public:
    int reverse(int x) {
        int ans = 0, t = 1;
        long int k;
        if(x<0) {
            k = -1 * long(x);
            t = -1;
        } else k = x;
        
        while(k>0) {
            if(ans>(pow(2,31)-1)/10){
                return ans*0;
            }
            ans = ans*10 + k%10;
            k = k/10;
        } 
        return ans*t;
    }
};
